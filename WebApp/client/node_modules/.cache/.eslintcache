[{"/Users/martinprieto/Documents/Uni/CIS450-Project/WebApp/client/src/index.js":"1","/Users/martinprieto/Documents/Uni/CIS450-Project/WebApp/client/src/pages/HomePage.js":"2","/Users/martinprieto/Documents/Uni/CIS450-Project/WebApp/client/src/pages/PlayersPage.js":"3","/Users/martinprieto/Documents/Uni/CIS450-Project/WebApp/client/src/pages/MatchesPage.js":"4","/Users/martinprieto/Documents/Uni/CIS450-Project/WebApp/client/src/fetcher.js":"5","/Users/martinprieto/Documents/Uni/CIS450-Project/WebApp/client/src/components/MenuBar.js":"6","/Users/martinprieto/Documents/Uni/CIS450-Project/WebApp/client/src/pages/GrandSlams.js":"7","/Users/martinprieto/Downloads/CIS 450 final submission/WebApp/client/src/index.js":"8","/Users/martinprieto/Downloads/CIS 450 final submission/WebApp/client/src/pages/HomePage.js":"9","/Users/martinprieto/Downloads/CIS 450 final submission/WebApp/client/src/pages/GrandSlams.js":"10","/Users/martinprieto/Downloads/CIS 450 final submission/WebApp/client/src/pages/MatchesPage.js":"11","/Users/martinprieto/Downloads/CIS 450 final submission/WebApp/client/src/pages/PlayersPage.js":"12","/Users/martinprieto/Downloads/CIS 450 final submission/WebApp/client/src/fetcher.js":"13","/Users/martinprieto/Downloads/CIS 450 final submission/WebApp/client/src/components/MenuBar.js":"14"},{"size":965,"mtime":1651858678034,"results":"15","hashOfConfig":"16"},{"size":2756,"mtime":1652044172412,"results":"17","hashOfConfig":"16"},{"size":11772,"mtime":1652233423838,"results":"18","hashOfConfig":"16"},{"size":5207,"mtime":1652039942960,"results":"19","hashOfConfig":"16"},{"size":3431,"mtime":1652233469933,"results":"20","hashOfConfig":"16"},{"size":872,"mtime":1651862567734,"results":"21","hashOfConfig":"16"},{"size":6611,"mtime":1652044202054,"results":"22","hashOfConfig":"16"},{"size":965,"mtime":1652224694000,"results":"23","hashOfConfig":"24"},{"size":2756,"mtime":1652224694000,"results":"25","hashOfConfig":"24"},{"size":6611,"mtime":1652224694000,"results":"26","hashOfConfig":"24"},{"size":5207,"mtime":1652224694000,"results":"27","hashOfConfig":"24"},{"size":11772,"mtime":1652224694000,"results":"28","hashOfConfig":"24"},{"size":3431,"mtime":1652224694000,"results":"29","hashOfConfig":"24"},{"size":872,"mtime":1652224694000,"results":"30","hashOfConfig":"24"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},"orhlq",{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"33"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"33"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"33"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1e5gvbb",{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/martinprieto/Documents/Uni/CIS450-Project/WebApp/client/src/index.js",[],["64","65"],"/Users/martinprieto/Documents/Uni/CIS450-Project/WebApp/client/src/pages/HomePage.js",["66","67","68","69"],"import React from 'react';\nimport {\n  Table,\n  Pagination,\n  Select\n} from 'antd'\n\nimport MenuBar from '../components/MenuBar';\nimport { getAllMatches, getAllPlayers } from '../fetcher'\nimport background from \"../Images/red2.png\";\nconst { Column, ColumnGroup } = Table;\nconst { Option } = Select;\n\nconst matchColumns = [\n  {\n    title: 'Tourney',\n    dataIndex: 'tourney',\n    key: 'tourney',\n  },\n  {\n    title: 'Date',\n    dataIndex: 'date',\n    key: 'date',\n  },\n  {\n    title: 'Surface',\n    dataIndex: 'surface',\n    key: 'surface',\n  },\n  {\n    title: 'Winner',\n    dataIndex: 'winner',\n    key: 'winner',\n    render: (text, row) => <a href={`/players?id=${row.WinnerId}`}>{text}</a> \n    \n  },\n  {\n    title: 'Loser',\n    dataIndex: 'loser',\n    key: 'loser',   \n    render: (text, row) => <a href={`/players?id=${row.LooserId}`}>{text}</a> \n  },\n  {\n    title: 'Score',\n    dataIndex: 'score',\n    key: 'score',    \n  },\n\n];\n\nclass HomePage extends React.Component {\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      matchesResults: [],\n      matchesPageNumber: 1,\n      matchesPageSize: 10,\n      playersResults: [],\n      pagination: null  \n    }\n\n    this.leagueOnChange = this.leagueOnChange.bind(this)\n    this.goToMatch = this.goToMatch.bind(this)\n  }\n\n\n  goToMatch(matchId) {\n    window.location = `/matches?id=${matchId}`\n  }\n\n  leagueOnChange(value) {\n    // TASK 2: this value should be used as a parameter to call getAllMatches in fetcher.js with the parameters page and pageSize set to null\n    // then, matchesResults in state should be set to the results returned - see a similar function call in componentDidMount()\n    getAllMatches(null, null, value).then(res => {\n      this.setState({ matchesResults: res.results })\n    })\n  }\n\n  componentDidMount() {\n    getAllMatches(null, null, 'All').then(res => {\n      this.setState({ matchesResults: res.results })\n    })\n\n    getAllPlayers().then(res => {\n      console.log(res.results)\n      // TASK 1: set the correct state attribute to res.results\n      console.log(\"Ã¤sdsad\")\n      console.log(res.results)\n      this.setState({ playersResults: res.results })\n    })\n\n \n  }\n\n\n  render() {\n\n    return (\n      <div style={{ backgroundImage: `url(${background})`, backgroundPosition: 'center', backgroundSize: 'cover', backgroundRepeat: 'no-repeat', position: 'absolute', top: '0', bottom: '0', width: '100%'}}>\n        <MenuBar />\n        <div style={{ width: '70vw', margin: '0 auto', marginTop: '2vh' }}>\n          <h3 style={{ color:'white' }}>Recent Matches</h3>\n              <Table dataSource={this.state.matchesResults} columns={matchColumns} pagination={{ pageSize:50 }} scroll={{ y: 560 }}/>\n        </div>\n      </div>\n    )\n  }\n\n}\n\nexport default HomePage\n","/Users/martinprieto/Documents/Uni/CIS450-Project/WebApp/client/src/pages/PlayersPage.js",["70","71","72"],"import React from 'react';\r\nimport { Form, FormInput, FormGroup, Button, Card, CardBody, CardTitle, Progress } from \"shards-react\";\r\nimport { getAdvancedDetails, getAllPlayers, getRanking } from '../fetcher'\r\n\r\nimport {\r\n    Table,\r\n    Row,\r\n    Col,\r\n    Divider,\r\n    Slider,\r\n} from 'antd'\r\nimport {\r\n    LineChart,\r\n    ResponsiveContainer,\r\n    Legend, Tooltip,\r\n    Line,\r\n    XAxis,\r\n    YAxis,\r\n    CartesianGrid\r\n} from 'recharts';\r\nimport { format } from 'd3-format';\r\nimport background from \"../Images/red2.png\";\r\n\r\n\r\n\r\n\r\nimport MenuBar from '../components/MenuBar';\r\nimport { getPlayerSearch, getPlayer } from '../fetcher'\r\nconst wideFormat = format('.3r');\r\n\r\nconst playerColumns = [\r\n    {\r\n      title: 'Name',\r\n      dataIndex: 'Name',\r\n      key: 'Name',\r\n      sorter: (a, b) => a.Name.localeCompare(b.Name),\r\n      render: (text, row) => <a href={`/players?id=${row.PlayerId}`}>{text}</a>\r\n    },\r\n    {\r\n      title: 'Nationality',\r\n      dataIndex: 'Nationality',\r\n      key: 'Nationality',\r\n      sorter: (a, b) => a.Nationality.localeCompare(b.Nationality)\r\n    },\r\n    {\r\n      title: 'Date of Birth',\r\n      dataIndex: 'dateOfBirth',\r\n      key: 'dateOfBirth',\r\n      sorter: (a, b) => a.dateOfBirth - b.dateOfBirth\r\n      \r\n    },\r\n    // TASK 7: add a column for Potential, with the ability to (numerically) sort ,\r\n    {\r\n      title: 'Hand',\r\n      dataIndex: 'hand',\r\n      key: 'hand',    \r\n    },\r\n  ];\r\n\r\n\r\nclass PlayersPage extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            nameQuery: '',\r\n            nationalityQuery: '',\r\n            handQuery: '',\r\n            birthHighQuery: 2024,\r\n            birthLowQuery: 0,\r\n            timeHighQuery: 2024,\r\n            timeLowQuery: 0,\r\n            selectedPlayerId: window.location.search ? window.location.search.substring(1).split('=')[1] : 229594,\r\n            selectedPlayerDetails: null,\r\n            advancedPlayerDetails: null,\r\n            rankingData: [],\r\n            playersResults: []\r\n\r\n        }\r\n\r\n        this.updateSearchResults = this.updateSearchResults.bind(this)\r\n        this.handleNameQueryChange = this.handleNameQueryChange.bind(this)\r\n        this.handleNationalityQueryChange = this.handleNationalityQueryChange.bind(this)\r\n        this.handleHandQueryChange = this.handleHandQueryChange.bind(this)\r\n        this.handleBirthChange = this.handleBirthChange.bind(this)\r\n        this.handleTimeChange = this.handleTimeChange.bind(this)\r\n    }\r\n\r\n    \r\n\r\n    handleNameQueryChange(event) {\r\n        this.setState({ nameQuery: event.target.value })\r\n    }\r\n\r\n    handleHandQueryChange(event) {\r\n        // TASK 20: update state variables appropriately. See handleNameQueryChange(event) for reference\r\n        this.setState({ handQuery: event.target.value })\r\n    }\r\n\r\n    handleNationalityQueryChange(event) {\r\n        // TASK 21: update state variables appropriately. See handleNameQueryChange(event) for reference\r\n        this.setState({ nationalityQuery: event.target.value })\r\n    }\r\n\r\n    handleBirthChange(value) {\r\n        this.setState({ birthLowQuery: value[0] })\r\n        this.setState({ birthHighQuery: value[1] })\r\n    }\r\n\r\n    handleTimeChange(value) {\r\n        this.setState({ timeLowQuery: value[0] })\r\n        this.setState({ timeHighQuery: value[1] })\r\n    }\r\n\r\n\r\n\r\n    updateSearchResults() {\r\n        //TASK 23: call getPlayerSearch and update playerResults in state. See componentDidMount() for a hint\r\n        getPlayerSearch(this.state.nameQuery, this.state.nationalityQuery, this.state.handQuery, this.state.birthHighQuery, this.state.birthLowQuery, null, null).then(res => {\r\n            this.setState({ playersResults: res.results })\r\n        })\r\n\r\n        getAdvancedDetails(this.state.selectedPlayerId, this.state.timeHighQuery, this.state.timeLowQuery).then(res => {\r\n            this.setState({ advancedPlayerDetails: res.results[0] })\r\n        })\r\n\r\n        getRanking(this.state.selectedPlayerId , this.state.timeHighQuery, this.state.timeLowQuery ,null, null).then(res => {\r\n            console.log(res.results)\r\n            this.setState({ rankingData: res.results })\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        getPlayerSearch(this.state.nameQuery, this.state.nationalityQuery, this.state.handQuery, this.state.birthHighQuery, this.state.birthLowQuery, null, null).then(res => {\r\n            this.setState({ playersResults: res.results })\r\n        })\r\n\r\n        getAllPlayers().then(res => {\r\n            // TASK 1: set the correct state attribute to res.results\r\n            this.setState({ playersResults: res.results })\r\n          })\r\n\r\n        // TASK 25: call getPlayer with the appropriate parameter and set update the correct state variable. \r\n        // See the usage of getMatch in the componentDidMount method of MatchesPage for a hint! \r\n        getPlayer(this.state.selectedPlayerId).then(res => {\r\n            this.setState({ selectedPlayerDetails: res.results[0] })\r\n        })\r\n\r\n        getAdvancedDetails(this.state.selectedPlayerId, this.state.timeHighQuery, this.state.timeLowQuery).then(res => {\r\n            this.setState({ advancedPlayerDetails: res.results[0] })\r\n        })\r\n\r\n        getRanking(this.state.selectedPlayerId , this.state.timeHighQuery, this.state.timeLowQuery, null, null).then(res => {\r\n            this.setState({ rankingData: res.results })\r\n            console.log(this.state.rankingData)\r\n        })\r\n\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n            <div style={{ backgroundImage: `url(${background})`, backgroundPosition: 'center', backgroundSize: 'cover', backgroundRepeat: 'no-repeat', position: 'absolute', top: '0', bottom: '0', width: '100%'}}>\r\n\r\n                <MenuBar />\r\n                <Form style={{ width: '80vw', margin: '0 auto', marginTop: '5vh' }}>\r\n                    <Row>\r\n                        <Col flex={2}><FormGroup style={{ width: '20vw', margin: '0 auto' }}>\r\n                            <label style={{color:'white'}}>Name</label>\r\n                            <FormInput placeholder=\"Name\" value={this.state.nameQuery} onChange={this.handleNameQueryChange} />\r\n                        </FormGroup></Col>\r\n                        <Col flex={2}><FormGroup style={{ width: '20vw', margin: '0 auto' }}>\r\n                            <label style={{color:'white'}}>Nationality</label>\r\n                            <FormInput placeholder=\"Nationality\" value={this.state.nationalityQuery} onChange={this.handleNationalityQueryChange} />\r\n                        </FormGroup></Col>\r\n                        <Col flex={2}><FormGroup style={{ width: '20vw', margin: '0 auto' }}>\r\n                            <label style={{color:'white'}}>Hand</label>\r\n                            <FormInput placeholder=\"Hand\" value={this.state.handQuery} onChange={this.handleHandQueryChange} />\r\n                        </FormGroup></Col>\r\n                    </Row>\r\n                    <br></br>\r\n                    <Row>\r\n                        <Col flex={2}>\r\n                            <FormGroup style={{ width: '20vw', margin: '0 auto' }}>\r\n                                <label style={{color:'white'}}>Date of birth</label>\r\n                                <Slider  min={1970} max={2022} range defaultValue={[1970, 2022]} onChange={this.handleBirthChange} />\r\n                            </FormGroup>\r\n                        </Col>\r\n                        {/* TASK 27: Create a column with a label and slider in a FormGroup item for filtering by Potential. See the column above for reference and use the onChange method (handlePotentialChange)  */}\r\n            \r\n                        <Col flex={2}><FormGroup style={{ width: '10vw' }}>\r\n                            <Button style={{ marginTop: '4vh' }} onClick={this.updateSearchResults}>Search</Button>\r\n                        </FormGroup></Col>\r\n\r\n                    </Row>\r\n\r\n\r\n                </Form>\r\n                <Divider />\r\n                {/* TASK 24: Copy in the players table from the Home page, but use the following style tag: style={{ width: '70vw', margin: '0 auto', marginTop: '2vh' }} - this should be one line of code! */}\r\n                <div style={{ margin: '0 2vh', marginTop: '2vh', display: 'flex' }}>\r\n                    <div style={{ width: '90vw', margin: '0 2vh'}}>\r\n                    <h3 style={{color:'white'}}>Players</h3>\r\n                    <Table dataSource={this.state.playersResults} columns={playerColumns} pagination={{ pageSizeOptions:[5, 10], defaultPageSize: 5, showQuickJumper:true }}/>\r\n                    </div> \r\n                    {this.state.selectedPlayerDetails ? <div style={{ width: '100vw', marginTop: '3vh'}}>\r\n                    <Card>\r\n                    \r\n                    <CardBody>\r\n                    <Row gutter='30' align='middle' justify='center'>\r\n                        <Col flex={2} style={{ textAlign: 'left' }}>\r\n                        <h3>{this.state.selectedPlayerDetails.Name}</h3>\r\n                        <Row>\r\n                                Age: {this.state.selectedPlayerDetails.age}\r\n                            </Row>\r\n                            <Row>\r\n                                Height: {this.state.selectedPlayerDetails.height}\r\n                            </Row>\r\n                            <Row>\r\n                                Nationality: {this.state.selectedPlayerDetails.Nationality}\r\n                            </Row>\r\n                        </Col>\r\n                        <Col flex={2} style={{ align: 'right'}}>\r\n                            <Col style={{ align: 'middle'}}>\r\n                                <Button onClick={this.updateSearchResults}>Apply time range</Button> \r\n                            </Col>\r\n                            <Slider  min={1970} max={2022} range defaultValue={[1970, 2022]} onChange={this.handleTimeChange} />\r\n                            {this.state.advancedPlayerDetails ? <div>\r\n                                <Row>\r\n                                Best Surface: {this.state.advancedPlayerDetails.BestSurface}\r\n                            </Row>\r\n                            <Row>\r\n                                Money Earned: {this.state.advancedPlayerDetails.Money}\r\n                            </Row>\r\n                            <Row>\r\n                                Wins: {this.state.advancedPlayerDetails.Wins}\r\n                            </Row>\r\n                            <Row>\r\n                                Losses: {this.state.advancedPlayerDetails.Losses}\r\n                            </Row>\r\n                            </div>: null}     \r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        \r\n                        <ResponsiveContainer width=\"100%\" aspect={3}>\r\n                            <LineChart data={this.state.rankingData} margin={{ right: 300 }}>\r\n                                <CartesianGrid />\r\n                                <XAxis dataKey=\"ranking_date\" \r\n                                interval={'preserveStartEnd'} />\r\n                                <YAxis></YAxis>\r\n                                <Legend />\r\n                                <Tooltip />\r\n                                <Line dataKey=\"ranking\"\r\n                                stroke=\"red\"  />\r\n                            </LineChart>\r\n                        </ResponsiveContainer>\r\n                    \r\n                        \r\n                    </Row>\r\n                    </CardBody>\r\n\r\n                </Card>\r\n                </div> : null}\r\n                </div>\r\n                <Divider />\r\n\r\n                \r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PlayersPage\r\n\r\n","/Users/martinprieto/Documents/Uni/CIS450-Project/WebApp/client/src/pages/MatchesPage.js",["73","74","75","76","77"],"import React from 'react';\r\nimport {\r\n  Table,\r\n  Pagination,\r\n  Select\r\n} from 'antd'\r\n\r\nimport MenuBar from '../components/MenuBar';\r\nimport { getAllMatches, getAllPlayers, getPlayerMatches } from '../fetcher'\r\nimport background from \"../Images/red2.png\";\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Option } = Select;\r\n\r\nconst rowSelection = {\r\n    onChange: (selectedRowKeys, selectedRows) => {\r\n      console.log(`selectedRowKeys: ${selectedRowKeys}`, 'selectedRows: ', selectedRows);\r\n    },\r\n    getCheckboxProps: (record) => ({\r\n      disabled: record.name === 'Disabled User',\r\n      // Column configuration not to be checked\r\n      name: record.name,\r\n    }),\r\n  };\r\n\r\nconst matchColumns = [\r\n  {\r\n    title: 'Tourney',\r\n    dataIndex: 'tourney',\r\n    key: 'tourney',\r\n    sorter: (a, b) => a.Name.localeCompare(b.tName),\r\n  },\r\n  {\r\n    title: 'Date',\r\n    dataIndex: 'date',\r\n    key: 'date',\r\n    sorter: (a, b) => a.date - b.date,\r\n  },\r\n  {\r\n    title: 'Surface',\r\n    dataIndex: 'surface',\r\n    key: 'surface',\r\n  },\r\n  {\r\n    title: 'Winner',\r\n    dataIndex: 'winner',\r\n    key: 'winner',\r\n    sorter: (a, b) => a.winner - b.winner,\r\n    render: (text, row) => <a href={`/players?id=${row.WinnerId}`}>{text}</a>\r\n  },\r\n  {\r\n    title: 'Loser',\r\n    dataIndex: 'loser',\r\n    key: 'loser',   \r\n    sorter: (a, b) => a.loser - b.loser,\r\n    render: (text, row) => <a href={`/players?id=${row.LooserId}`}>{text}</a> \r\n  },\r\n  {\r\n    title: 'Score',\r\n    dataIndex: 'score',\r\n    key: 'score',    \r\n  },\r\n\r\n  {\r\n    title: 'Round',\r\n    dataIndex: 'round',\r\n    key: 'round',    \r\n  },\r\n\r\n];\r\n\r\nclass HomePage extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      matchesResults: [],\r\n      matchesPageNumber: 1,\r\n      matchesPageSize: 10,\r\n      winnerMatchResults: null,\r\n      looserMatchResults: null,\r\n      playerIdQuery: '',\r\n      tourneyQuery: '',\r\n      dateQuery: '',\r\n      pagination: null  \r\n    }\r\n\r\n    this.leagueOnChange = this.leagueOnChange.bind(this)\r\n    this.goToMatch = this.goToMatch.bind(this)\r\n    this.handleCheckbox = this.handleCheckbox.bind(this)\r\n    this.handleCheckboxProps = this.handleCheckboxProps.bind(this)\r\n  }\r\n\r\n\r\n  goToMatch(matchId) {\r\n    window.location = `/matches?id=${matchId}`\r\n  }\r\n\r\n  leagueOnChange(value) {\r\n    // TASK 2: this value should be used as a parameter to call getAllMatches in fetcher.js with the parameters page and pageSize set to null\r\n    // then, matchesResults in state should be set to the results returned - see a similar function call in componentDidMount()\r\n    getAllMatches(null, null, value).then(res => {\r\n      this.setState({ matchesResults: res.results })\r\n    })\r\n  }\r\n\r\n  componentDidMount() {\r\n    getAllMatches(null, null, 'All').then(res => {\r\n      this.setState({ matchesResults: res.results })\r\n    })\r\n\r\n    getAllPlayers().then(res => {\r\n      console.log(res.results)\r\n      // TASK 1: set the correct state attribute to res.results\r\n      console.log(\"Ã¤sdsad\")\r\n      console.log(res.results)\r\n      this.setState({ playersResults: res.results })\r\n    })\r\n\r\n \r\n  }\r\n\r\n  handleCheckbox(selectedRowKeys, selectedRows){\r\n\r\n    getPlayerMatches(selectedRows[0].WinnerId, selectedRows[0].tourney, selectedRows[0].date).then(res => {\r\n        this.setState({ winnerMatchResults: res.results })\r\n    })\r\n\r\n    getPlayerMatches(selectedRows[0].LoserId, selectedRows[0].tourney, selectedRows[0].date).then(res => {\r\n        this.setState({ looserMatchResults: res.results })\r\n    })\r\n    console.log(selectedRows[0].LoserId);\r\n  }\r\n\r\n  handleCheckboxProps = (record) => ({\r\n    disabled: record.name === 'Disabled User',\r\n    // Column configuration not to be checked\r\n    name: record.name,\r\n  });\r\n\r\n  \r\n\r\n\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div style={{ backgroundImage: `url(${background})`, backgroundPosition: 'center', backgroundSize: 'cover', backgroundRepeat: 'no-repeat', position: 'absolute', top: '0', bottom: '0', width: '100%'}}>\r\n        <MenuBar />\r\n        <div style={{ width: '70vw', margin: '0 auto', marginTop: '2vh' }}>\r\n          <h3 style={{ color:'white' }}>Matches</h3>\r\n              <Table dataSource={this.state.matchesResults} rowSelection={{type: \"radio\", onChange: this.handleCheckbox, getCheckboxProps: this.handleCheckboxProps,}} columns={matchColumns} pagination={{ pageSize:50 }} scroll={{ y: 200 }}/>\r\n        </div>\r\n        <div style={{display: 'flex'}}>\r\n            {this.state.looserMatchResults ? <div style={{ width: '50vw', margin: '0 2vh', marginTop: '2vh' }}>\r\n                <h3 style={{ color:'white' }}>Winner</h3>\r\n                <Table dataSource={this.state.winnerMatchResults} columns={matchColumns} pagination={{ pageSize:50 }} scroll={{ y: 200 }}/>\r\n            </div> : null}\r\n\r\n            {this.state.looserMatchResults ? <div style={{ width: '50vw', margin: '0 2vh', marginTop: '2vh' }}>\r\n                <h3 style={{ color:'white' }}>Loser</h3>\r\n                <Table dataSource={this.state.looserMatchResults} columns={matchColumns} pagination={{ pageSize:50 }} scroll={{ y: 200 }}/>\r\n            </div>: null}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport default HomePage\r\n","/Users/martinprieto/Documents/Uni/CIS450-Project/WebApp/client/src/fetcher.js",[],"/Users/martinprieto/Documents/Uni/CIS450-Project/WebApp/client/src/components/MenuBar.js",[],"/Users/martinprieto/Documents/Uni/CIS450-Project/WebApp/client/src/pages/GrandSlams.js",["78","79","80","81","82","83","84","85","86","87"],"import React from 'react';\nimport { Form, FormInput, FormGroup, Button, Card, CardBody, CardTitle, Progress } from \"shards-react\";\nimport {\n  Table,\n  Pagination,\n  Select,\n  Row,\n  Col,\n  Divider,\n  Slider,\n} from 'antd'\n\nimport MenuBar from '../components/MenuBar';\nimport { getAllMatches, getAllPlayers, getChampions, getHandStats } from '../fetcher'\nimport background from \"../Images/red2.png\";\nconst { Column, ColumnGroup } = Table;\nconst { Option } = Select;\n\nconst championColumns = [\n  {\n    title: 'Year',\n    dataIndex: 'year',\n    key: 'year',\n  },\n  {\n    title: 'Champion',\n    dataIndex: 'champion',\n    key: 'champion',\n  },\n  {\n    title: 'Prize',\n    dataIndex: 'first_prize',\n    key: 'first_prize',\n  },\n  {\n    title: 'Ranking',\n    dataIndex: 'champion_rank',\n    key: 'champion_rank',\n  },\n\n];\n\n\n\nconst playerColumns = [\n  {\n    title: 'Name',\n    dataIndex: 'Name',\n    key: 'Name',\n    sorter: (a, b) => a.Name.localeCompare(b.Name),\n    render: (text, row) => <a href={`/players?id=${row.PlayerId}`}>{text}</a>\n  },\n  {\n    title: 'Nationality',\n    dataIndex: 'Nationality',\n    key: 'Nationality',\n    sorter: (a, b) => a.Nationality.localeCompare(b.Nationality)\n  },\n  {\n    title: 'Date of Birth',\n    dataIndex: 'dateOfBirth',\n    key: 'dateOfBirth',\n    sorter: (a, b) => a.dateOfBirth - b.dateOfBirth\n    \n  },\n  // TASK 7: add a column for Potential, with the ability to (numerically) sort ,\n  {\n    title: 'Hand',\n    dataIndex: 'hand',\n    key: 'hand',    \n  },\n];\n\nconst matchColumns = [\n  {\n    title: 'Tourney',\n    dataIndex: 'tourney',\n    key: 'tourney',\n  },\n  {\n    title: 'Date',\n    dataIndex: 'date',\n    key: 'date',\n  },\n  {\n    title: 'Surface',\n    dataIndex: 'surface',\n    key: 'surface',\n  },\n  {\n    title: 'Winner',\n    dataIndex: 'winner',\n    key: 'winner',\n    \n  },\n  {\n    title: 'Loser',\n    dataIndex: 'loser',\n    key: 'loser',   \n  },\n  {\n    title: 'Score',\n    dataIndex: 'score',\n    key: 'score',    \n  },\n\n];\n\nclass GrandSlams extends React.Component {\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      matchesResults: [],\n      championResults: [],\n      matchesPageNumber: 1,\n      matchesPageSize: 10,\n      playersResults: [],\n      slamInfoResults: [],\n      timeLowQuery: 0,\n      timeHighQuery: 2024,\n      pagination: null  \n    }\n\n    this.tourneyOnChange = this.tourneyOnChange.bind(this)\n    this.goToMatch = this.goToMatch.bind(this)\n    this.handleTimeChange = this.handleTimeChange.bind(this)\n    this.updateSearchResults = this.updateSearchResults.bind(this)\n  }\n\n\n  goToMatch(matchId) {\n    window.location = `/matches?id=${matchId}`\n  }\n\n  tourneyOnChange(value) {\n    console.log(value)\n    // TASK 2: this value should be used as a parameter to call getAllMatches in fetcher.js with the parameters page and pageSize set to null\n    // then, matchesResults in state should be set to the results returned - see a similar function call in componentDidMount()\n    getAllMatches(null, null, value).then(res => {\n      this.setState({ matchesResults: res.results })\n    })\n\n    getChampions(null, null, value).then(res => {\n      this.setState({ championResults: res.results })\n    })\n  }\n\n  componentDidMount() {\n    getAllMatches(null, null, 'Wimbledon').then(res => {\n      this.setState({ matchesResults: res.results })\n    })\n\n    getChampions(null, null, 'Wimbledon').then(res => {\n      this.setState({ championResults: res.results })\n    })\n\n    getAllPlayers().then(res => {\n      console.log(res.results)\n      // TASK 1: set the correct state attribute to res.results\n      console.log(res.results)\n      this.setState({ playersResults: res.results })\n    })\n\n    getHandStats(this.state.timeHighQuery, this.state.timeLowQuery, null, null).then(res => {\n      console.log(res.results)\n      this.setState({ slamInfoResults: res.results[0] })\n    })\n\n \n  }\n\n  handleTimeChange(value) {\n    this.setState({ timeLowQuery: value[0] })\n    this.setState({ timeHighQuery: value[1] })\n}\n\nupdateSearchResults() {\n  //TASK 23: call getPlayerSearch and update playerResults in state. See componentDidMount() for a hint\n  getHandStats(this.state.timeHighQuery, this.state.timeLowQuery, null, null).then(res => {\n    console.log(res.results)\n    this.setState({ slamInfoResults: res.results[0] })\n  })\n}\n\n\n  render() {\n\n    return (\n      <div style={{ backgroundImage: `url(${background})`, backgroundPosition: 'center', backgroundSize: 'cover', backgroundRepeat: 'no-repeat', position: 'absolute', top: '0', bottom: '0', width: '100%'}}>\n        <MenuBar />\n        <div style={{display: 'flex'}}>\n          <div style={{marginRight: '8vw'}}>\n            <div style={{ width: '50vw', margin: '0 2vh', marginTop: '0' }}>\n              <h3 style={{color: 'white'}}>Grand Slams</h3>\n              <Select defaultValue=\"Wimbledon\" style={{ width: 120 }} onChange={this.tourneyOnChange}>\n                <Option value=\"Wimbledon\">Wimbledon</Option>\n                <Option value=\"US Open\">US Open</Option>\n                <Option value=\"Australian Open\">Australian Open</Option>\n                <Option value=\"Roland Garros\">Roland Garros</Option>\n              </Select>\n                  <Table dataSource={this.state.matchesResults} columns={matchColumns}  pagination={{ pageSize:50 }} scroll={{ y: 200 }}/>\n            </div>\n            <div style={{ width: '50vw', margin: '0 2vh', marginTop: '0' }}>\n              <h3 style={{color: 'white'}}>Champions</h3>\n              <Table dataSource={this.state.championResults} columns={championColumns}  pagination={{ pageSize:50 }} scroll={{ y: 200 }}/>\n            </div>\n          </div>\n          <div style={{swidth: '20vw', width: '35vw', margin: '0 0', marginTop: '5vh' }}>\n              <Card>\n                <CardBody>\n                  <Row>\n                  <Col>\n                    <h3 style={{marginRight: '2vh'}}>Grand Slam Info</h3>\n                    <Row>Right handed winners: {this.state.slamInfoResults.r_prop} </Row>\n                    <Row>Left handed winners: {this.state.slamInfoResults.l_prop}</Row>\n                    <Row>Average Height:  {this.state.slamInfoResults.avg_height}</Row>\n                  </Col>\n                  <Col>\n                      <Button onClick={this.updateSearchResults}>Apply time range</Button> \n                      <Slider  min={1970} max={2022} range defaultValue={[1970, 2022]} onChange={this.handleTimeChange} />\n                  </Col>\n                  </Row>\n                </CardBody>\n              </Card>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n}\n\nexport default GrandSlams\n\n","/Users/martinprieto/Downloads/CIS 450 final submission/WebApp/client/src/index.js",[],"/Users/martinprieto/Downloads/CIS 450 final submission/WebApp/client/src/pages/HomePage.js",["88","89","90","91"],"/Users/martinprieto/Downloads/CIS 450 final submission/WebApp/client/src/pages/GrandSlams.js",["92","93","94","95","96","97","98","99","100","101"],"/Users/martinprieto/Downloads/CIS 450 final submission/WebApp/client/src/pages/MatchesPage.js",["102","103","104","105","106"],"/Users/martinprieto/Downloads/CIS 450 final submission/WebApp/client/src/pages/PlayersPage.js",["107","108","109"],"/Users/martinprieto/Downloads/CIS 450 final submission/WebApp/client/src/fetcher.js",[],"/Users/martinprieto/Downloads/CIS 450 final submission/WebApp/client/src/components/MenuBar.js",[],{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","severity":1,"message":"115","line":4,"column":3,"nodeType":"116","messageId":"117","endLine":4,"endColumn":13},{"ruleId":"114","severity":1,"message":"118","line":11,"column":9,"nodeType":"116","messageId":"117","endLine":11,"endColumn":15},{"ruleId":"114","severity":1,"message":"119","line":11,"column":17,"nodeType":"116","messageId":"117","endLine":11,"endColumn":28},{"ruleId":"114","severity":1,"message":"120","line":12,"column":9,"nodeType":"116","messageId":"117","endLine":12,"endColumn":15},{"ruleId":"114","severity":1,"message":"121","line":2,"column":62,"nodeType":"116","messageId":"117","endLine":2,"endColumn":71},{"ruleId":"114","severity":1,"message":"122","line":2,"column":73,"nodeType":"116","messageId":"117","endLine":2,"endColumn":81},{"ruleId":"114","severity":1,"message":"123","line":29,"column":7,"nodeType":"116","messageId":"117","endLine":29,"endColumn":17},{"ruleId":"114","severity":1,"message":"115","line":4,"column":3,"nodeType":"116","messageId":"117","endLine":4,"endColumn":13},{"ruleId":"114","severity":1,"message":"118","line":11,"column":9,"nodeType":"116","messageId":"117","endLine":11,"endColumn":15},{"ruleId":"114","severity":1,"message":"119","line":11,"column":17,"nodeType":"116","messageId":"117","endLine":11,"endColumn":28},{"ruleId":"114","severity":1,"message":"120","line":12,"column":9,"nodeType":"116","messageId":"117","endLine":12,"endColumn":15},{"ruleId":"114","severity":1,"message":"124","line":14,"column":7,"nodeType":"116","messageId":"117","endLine":14,"endColumn":19},{"ruleId":"114","severity":1,"message":"125","line":2,"column":10,"nodeType":"116","messageId":"117","endLine":2,"endColumn":14},{"ruleId":"114","severity":1,"message":"126","line":2,"column":16,"nodeType":"116","messageId":"117","endLine":2,"endColumn":25},{"ruleId":"114","severity":1,"message":"127","line":2,"column":27,"nodeType":"116","messageId":"117","endLine":2,"endColumn":36},{"ruleId":"114","severity":1,"message":"121","line":2,"column":62,"nodeType":"116","messageId":"117","endLine":2,"endColumn":71},{"ruleId":"114","severity":1,"message":"122","line":2,"column":73,"nodeType":"116","messageId":"117","endLine":2,"endColumn":81},{"ruleId":"114","severity":1,"message":"115","line":5,"column":3,"nodeType":"116","messageId":"117","endLine":5,"endColumn":13},{"ruleId":"114","severity":1,"message":"128","line":9,"column":3,"nodeType":"116","messageId":"117","endLine":9,"endColumn":10},{"ruleId":"114","severity":1,"message":"118","line":16,"column":9,"nodeType":"116","messageId":"117","endLine":16,"endColumn":15},{"ruleId":"114","severity":1,"message":"119","line":16,"column":17,"nodeType":"116","messageId":"117","endLine":16,"endColumn":28},{"ruleId":"114","severity":1,"message":"129","line":45,"column":7,"nodeType":"116","messageId":"117","endLine":45,"endColumn":20},{"ruleId":"114","severity":1,"message":"115","line":4,"column":3,"nodeType":"116","messageId":"117","endLine":4,"endColumn":13},{"ruleId":"114","severity":1,"message":"118","line":11,"column":9,"nodeType":"116","messageId":"117","endLine":11,"endColumn":15},{"ruleId":"114","severity":1,"message":"119","line":11,"column":17,"nodeType":"116","messageId":"117","endLine":11,"endColumn":28},{"ruleId":"114","severity":1,"message":"120","line":12,"column":9,"nodeType":"116","messageId":"117","endLine":12,"endColumn":15},{"ruleId":"114","severity":1,"message":"125","line":2,"column":10,"nodeType":"116","messageId":"117","endLine":2,"endColumn":14},{"ruleId":"114","severity":1,"message":"126","line":2,"column":16,"nodeType":"116","messageId":"117","endLine":2,"endColumn":25},{"ruleId":"114","severity":1,"message":"127","line":2,"column":27,"nodeType":"116","messageId":"117","endLine":2,"endColumn":36},{"ruleId":"114","severity":1,"message":"121","line":2,"column":62,"nodeType":"116","messageId":"117","endLine":2,"endColumn":71},{"ruleId":"114","severity":1,"message":"122","line":2,"column":73,"nodeType":"116","messageId":"117","endLine":2,"endColumn":81},{"ruleId":"114","severity":1,"message":"115","line":5,"column":3,"nodeType":"116","messageId":"117","endLine":5,"endColumn":13},{"ruleId":"114","severity":1,"message":"128","line":9,"column":3,"nodeType":"116","messageId":"117","endLine":9,"endColumn":10},{"ruleId":"114","severity":1,"message":"118","line":16,"column":9,"nodeType":"116","messageId":"117","endLine":16,"endColumn":15},{"ruleId":"114","severity":1,"message":"119","line":16,"column":17,"nodeType":"116","messageId":"117","endLine":16,"endColumn":28},{"ruleId":"114","severity":1,"message":"129","line":45,"column":7,"nodeType":"116","messageId":"117","endLine":45,"endColumn":20},{"ruleId":"114","severity":1,"message":"115","line":4,"column":3,"nodeType":"116","messageId":"117","endLine":4,"endColumn":13},{"ruleId":"114","severity":1,"message":"118","line":11,"column":9,"nodeType":"116","messageId":"117","endLine":11,"endColumn":15},{"ruleId":"114","severity":1,"message":"119","line":11,"column":17,"nodeType":"116","messageId":"117","endLine":11,"endColumn":28},{"ruleId":"114","severity":1,"message":"120","line":12,"column":9,"nodeType":"116","messageId":"117","endLine":12,"endColumn":15},{"ruleId":"114","severity":1,"message":"124","line":14,"column":7,"nodeType":"116","messageId":"117","endLine":14,"endColumn":19},{"ruleId":"114","severity":1,"message":"121","line":2,"column":62,"nodeType":"116","messageId":"117","endLine":2,"endColumn":71},{"ruleId":"114","severity":1,"message":"122","line":2,"column":73,"nodeType":"116","messageId":"117","endLine":2,"endColumn":81},{"ruleId":"114","severity":1,"message":"123","line":29,"column":7,"nodeType":"116","messageId":"117","endLine":29,"endColumn":17},"no-native-reassign",["130"],"no-negated-in-lhs",["131"],"no-unused-vars","'Pagination' is defined but never used.","Identifier","unusedVar","'Column' is assigned a value but never used.","'ColumnGroup' is assigned a value but never used.","'Option' is assigned a value but never used.","'CardTitle' is defined but never used.","'Progress' is defined but never used.","'wideFormat' is assigned a value but never used.","'rowSelection' is assigned a value but never used.","'Form' is defined but never used.","'FormInput' is defined but never used.","'FormGroup' is defined but never used.","'Divider' is defined but never used.","'playerColumns' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]