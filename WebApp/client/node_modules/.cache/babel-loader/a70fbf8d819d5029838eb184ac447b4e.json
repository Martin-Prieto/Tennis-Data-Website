{"ast":null,"code":"var _jsxFileName = \"/Users/martinprieto/Documents/Uni/CIS450-Project/WebApp/client/src/pages/GrandSlams.js\";\nimport React from 'react';\nimport { Table, Pagination, Select } from 'antd';\nimport MenuBar from '../components/MenuBar';\nimport { getAllMatches, getAllPlayers, getChampions } from '../fetcher';\nimport background from \"../Images/red2.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Column,\n  ColumnGroup\n} = Table;\nconst {\n  Option\n} = Select;\nconst championColumns = [{\n  title: 'Year',\n  dataIndex: 'year',\n  key: 'year'\n}, {\n  title: 'Champion',\n  dataIndex: 'champion',\n  key: 'champion'\n}];\nconst playerColumns = [{\n  title: 'Name',\n  dataIndex: 'Name',\n  key: 'Name',\n  sorter: (a, b) => a.Name.localeCompare(b.Name),\n  render: (text, row) => /*#__PURE__*/_jsxDEV(\"a\", {\n    href: `/players?id=${row.PlayerId}`,\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 28\n  }, this)\n}, {\n  title: 'Nationality',\n  dataIndex: 'Nationality',\n  key: 'Nationality',\n  sorter: (a, b) => a.Nationality.localeCompare(b.Nationality)\n}, {\n  title: 'Date of Birth',\n  dataIndex: 'dateOfBirth',\n  key: 'dateOfBirth',\n  sorter: (a, b) => a.dateOfBirth - b.dateOfBirth\n}, // TASK 7: add a column for Potential, with the ability to (numerically) sort ,\n{\n  title: 'Hand',\n  dataIndex: 'hand',\n  key: 'hand'\n}];\nconst matchColumns = [{\n  title: 'Tourney',\n  dataIndex: 'tourney',\n  key: 'tourney'\n}, {\n  title: 'Date',\n  dataIndex: 'date',\n  key: 'date',\n  sorter: (a, b) => a.date - b.date\n}, {\n  title: 'Surface',\n  dataIndex: 'surface',\n  key: 'surface'\n}, {\n  title: 'Winner',\n  dataIndex: 'winner',\n  key: 'winner',\n  sorter: (a, b) => a.winner - b.winner\n}, {\n  title: 'Loser',\n  dataIndex: 'loser',\n  key: 'loser',\n  sorter: (a, b) => a.loser - b.loser\n}, {\n  title: 'Score',\n  dataIndex: 'score',\n  key: 'score'\n}];\n\nclass GrandSlams extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      matchesResults: [],\n      championResults: [],\n      matchesPageNumber: 1,\n      matchesPageSize: 10,\n      playersResults: [],\n      pagination: null\n    };\n    this.tourneyOnChange = this.tourneyOnChange.bind(this);\n    this.goToMatch = this.goToMatch.bind(this);\n  }\n\n  goToMatch(matchId) {\n    window.location = `/matches?id=${matchId}`;\n  }\n\n  tourneyOnChange(value) {\n    console.log(value); // TASK 2: this value should be used as a parameter to call getAllMatches in fetcher.js with the parameters page and pageSize set to null\n    // then, matchesResults in state should be set to the results returned - see a similar function call in componentDidMount()\n\n    getAllMatches(null, null, value).then(res => {\n      this.setState({\n        matchesResults: res.results\n      });\n    });\n    getChampions(null, null, value).then(res => {\n      this.setState({\n        championResults: res.results\n      });\n    });\n  }\n\n  componentDidMount() {\n    getAllMatches(null, null, 'Wimbledon').then(res => {\n      this.setState({\n        matchesResults: res.results\n      });\n    });\n    getChampions(null, null, 'Wimbledon').then(res => {\n      this.setState({\n        championResults: res.results\n      });\n    });\n    getAllPlayers().then(res => {\n      console.log(res.results); // TASK 1: set the correct state attribute to res.results\n\n      console.log(res.results);\n      this.setState({\n        playersResults: res.results\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundImage: `url(${background})`,\n        backgroundPosition: 'center',\n        backgroundSize: 'cover',\n        backgroundRepeat: 'no-repeat',\n        position: 'absolute',\n        top: '0',\n        bottom: '0',\n        width: '100%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(MenuBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginRight: '8vw'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: '50vw',\n              margin: '0 2vh',\n              marginTop: '0'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              style: {\n                color: 'white'\n              },\n              children: \"Grand Slams\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              defaultValue: \"Wimbledon\",\n              style: {\n                width: 120\n              },\n              onChange: this.tourneyOnChange,\n              children: [/*#__PURE__*/_jsxDEV(Option, {\n                value: \"Wimbledon\",\n                children: \"Wimbledon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Option, {\n                value: \"US Open\",\n                children: \"US Open\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Option, {\n                value: \"Australian Open\",\n                children: \"Australian Open\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Option, {\n                value: \"Roland Garros\",\n                children: \"Roland Garros\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Table, {\n              dataSource: this.state.matchesResults,\n              columns: matchColumns,\n              pagination: {\n                pageSize: 50\n              },\n              scroll: {\n                y: 200\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: '50vw',\n              margin: '0 2vh',\n              marginTop: '0'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              style: {\n                color: 'white'\n              },\n              children: \"Champions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Table, {\n              dataSource: this.state.championResults,\n              columns: championColumns,\n              pagination: {\n                pageSize: 50\n              },\n              scroll: {\n                y: 200\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            swidth: '30vw',\n            margin: '0 0',\n            marginTop: '5vh'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            style: {\n              color: 'white'\n            },\n            children: \"Aggregate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Table, {\n            dataSource: this.state.playersResults,\n            columns: playerColumns,\n            pagination: {\n              pageSizeOptions: [5, 5],\n              defaultPageSize: 5,\n              showQuickJumper: true\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default GrandSlams;","map":{"version":3,"sources":["/Users/martinprieto/Documents/Uni/CIS450-Project/WebApp/client/src/pages/GrandSlams.js"],"names":["React","Table","Pagination","Select","MenuBar","getAllMatches","getAllPlayers","getChampions","background","Column","ColumnGroup","Option","championColumns","title","dataIndex","key","playerColumns","sorter","a","b","Name","localeCompare","render","text","row","PlayerId","Nationality","dateOfBirth","matchColumns","date","winner","loser","GrandSlams","Component","constructor","props","state","matchesResults","championResults","matchesPageNumber","matchesPageSize","playersResults","pagination","tourneyOnChange","bind","goToMatch","matchId","window","location","value","console","log","then","res","setState","results","componentDidMount","backgroundImage","backgroundPosition","backgroundSize","backgroundRepeat","position","top","bottom","width","display","marginRight","margin","marginTop","color","pageSize","y","swidth","pageSizeOptions","defaultPageSize","showQuickJumper"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  Table,\n  Pagination,\n  Select\n} from 'antd'\n\nimport MenuBar from '../components/MenuBar';\nimport { getAllMatches, getAllPlayers, getChampions } from '../fetcher'\nimport background from \"../Images/red2.png\";\nconst { Column, ColumnGroup } = Table;\nconst { Option } = Select;\n\nconst championColumns = [\n  {\n    title: 'Year',\n    dataIndex: 'year',\n    key: 'year',\n  },\n  {\n    title: 'Champion',\n    dataIndex: 'champion',\n    key: 'champion',\n  },\n\n];\n\n\n\nconst playerColumns = [\n  {\n    title: 'Name',\n    dataIndex: 'Name',\n    key: 'Name',\n    sorter: (a, b) => a.Name.localeCompare(b.Name),\n    render: (text, row) => <a href={`/players?id=${row.PlayerId}`}>{text}</a>\n  },\n  {\n    title: 'Nationality',\n    dataIndex: 'Nationality',\n    key: 'Nationality',\n    sorter: (a, b) => a.Nationality.localeCompare(b.Nationality)\n  },\n  {\n    title: 'Date of Birth',\n    dataIndex: 'dateOfBirth',\n    key: 'dateOfBirth',\n    sorter: (a, b) => a.dateOfBirth - b.dateOfBirth\n    \n  },\n  // TASK 7: add a column for Potential, with the ability to (numerically) sort ,\n  {\n    title: 'Hand',\n    dataIndex: 'hand',\n    key: 'hand',    \n  },\n];\n\nconst matchColumns = [\n  {\n    title: 'Tourney',\n    dataIndex: 'tourney',\n    key: 'tourney',\n  },\n  {\n    title: 'Date',\n    dataIndex: 'date',\n    key: 'date',\n    sorter: (a, b) => a.date - b.date,\n  },\n  {\n    title: 'Surface',\n    dataIndex: 'surface',\n    key: 'surface',\n  },\n  {\n    title: 'Winner',\n    dataIndex: 'winner',\n    key: 'winner',\n    sorter: (a, b) => a.winner - b.winner\n    \n  },\n  {\n    title: 'Loser',\n    dataIndex: 'loser',\n    key: 'loser',   \n    sorter: (a, b) => a.loser - b.loser \n  },\n  {\n    title: 'Score',\n    dataIndex: 'score',\n    key: 'score',    \n  },\n\n];\n\nclass GrandSlams extends React.Component {\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      matchesResults: [],\n      championResults: [],\n      matchesPageNumber: 1,\n      matchesPageSize: 10,\n      playersResults: [],\n      pagination: null  \n    }\n\n    this.tourneyOnChange = this.tourneyOnChange.bind(this)\n    this.goToMatch = this.goToMatch.bind(this)\n  }\n\n\n  goToMatch(matchId) {\n    window.location = `/matches?id=${matchId}`\n  }\n\n  tourneyOnChange(value) {\n    console.log(value)\n    // TASK 2: this value should be used as a parameter to call getAllMatches in fetcher.js with the parameters page and pageSize set to null\n    // then, matchesResults in state should be set to the results returned - see a similar function call in componentDidMount()\n    getAllMatches(null, null, value).then(res => {\n      this.setState({ matchesResults: res.results })\n    })\n\n    getChampions(null, null, value).then(res => {\n      this.setState({ championResults: res.results })\n    })\n  }\n\n  componentDidMount() {\n    getAllMatches(null, null, 'Wimbledon').then(res => {\n      this.setState({ matchesResults: res.results })\n    })\n\n    getChampions(null, null, 'Wimbledon').then(res => {\n      this.setState({ championResults: res.results })\n    })\n\n    getAllPlayers().then(res => {\n      console.log(res.results)\n      // TASK 1: set the correct state attribute to res.results\n      console.log(res.results)\n      this.setState({ playersResults: res.results })\n    })\n\n \n  }\n\n\n  render() {\n\n    return (\n      <div style={{ backgroundImage: `url(${background})`, backgroundPosition: 'center', backgroundSize: 'cover', backgroundRepeat: 'no-repeat', position: 'absolute', top: '0', bottom: '0', width: '100%'}}>\n        <MenuBar />\n        <div style={{display: 'flex'}}>\n          <div style={{marginRight: '8vw'}}>\n            <div style={{ width: '50vw', margin: '0 2vh', marginTop: '0' }}>\n              <h3 style={{color: 'white'}}>Grand Slams</h3>\n              <Select defaultValue=\"Wimbledon\" style={{ width: 120 }} onChange={this.tourneyOnChange}>\n                <Option value=\"Wimbledon\">Wimbledon</Option>\n                <Option value=\"US Open\">US Open</Option>\n                <Option value=\"Australian Open\">Australian Open</Option>\n                <Option value=\"Roland Garros\">Roland Garros</Option>\n              </Select>\n                  <Table dataSource={this.state.matchesResults} columns={matchColumns}  pagination={{ pageSize:50 }} scroll={{ y: 200 }}/>\n            </div>\n            <div style={{ width: '50vw', margin: '0 2vh', marginTop: '0' }}>\n              <h3 style={{color: 'white'}}>Champions</h3>\n              <Table dataSource={this.state.championResults} columns={championColumns}  pagination={{ pageSize:50 }} scroll={{ y: 200 }}/>\n            </div>\n          </div>\n          <div style={{swidth: '30vw', margin: '0 0', marginTop: '5vh' }}>\n              <h3 style={{color: 'white'}}>Aggregate</h3>\n              <Table dataSource={this.state.playersResults} columns={playerColumns} pagination={{ pageSizeOptions:[5, 5], defaultPageSize: 5, showQuickJumper:true }}/>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n}\n\nexport default GrandSlams\n\n"]},"metadata":{},"sourceType":"module"}