{"ast":null,"code":"var _jsxFileName = \"/Users/martinprieto/Documents/Uni/CIS450-Project/WebApp/client/src/pages/GrandSlams.js\";\nimport React from 'react';\nimport { Table, Pagination, Select } from 'antd';\nimport MenuBar from '../components/MenuBar';\nimport { getAllMatches, getAllPlayers } from '../fetcher';\nimport background from \"../Images/red2.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Column,\n  ColumnGroup\n} = Table;\nconst {\n  Option\n} = Select;\nconst playerColumns = [{\n  title: 'First Name',\n  dataIndex: 'firstName',\n  key: 'firstName',\n  sorter: (a, b) => a.firstName.localeCompare(b.firstName),\n  render: (text, row) => /*#__PURE__*/_jsxDEV(\"a\", {\n    href: `/players?id=${row.PlayerId}`,\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 28\n  }, this)\n}, {\n  title: 'Last Name',\n  dataIndex: 'lastName',\n  key: 'lastName',\n  sorter: (a, b) => a.lastName.localeCompare(b.lastName)\n}, {\n  title: 'Nationality',\n  dataIndex: 'Nationality',\n  key: 'Nationality',\n  sorter: (a, b) => a.Nationality.localeCompare(b.Nationality)\n}, {\n  title: 'Date of Birth',\n  dataIndex: 'dateOfBirth',\n  key: 'dateOfBirth',\n  sorter: (a, b) => a.dateOfBirth - b.dateOfBirth\n}, // TASK 7: add a column for Potential, with the ability to (numerically) sort ,\n{\n  title: 'Hand',\n  dataIndex: 'hand',\n  key: 'hand'\n}];\nconst matchColumns = [{\n  title: 'Tourney',\n  dataIndex: 'tourney',\n  key: 'tourney',\n  sorter: (a, b) => a.firstName.localeCompare(b.firstName),\n  render: (text, row) => /*#__PURE__*/_jsxDEV(\"a\", {\n    href: `/players?id=${row.PlayerId}`,\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 28\n  }, this)\n}, {\n  title: 'Date',\n  dataIndex: 'date',\n  key: 'date',\n  sorter: (a, b) => a.date - b.date\n}, {\n  title: 'Surface',\n  dataIndex: 'surface',\n  key: 'surface'\n}, {\n  title: 'Winner',\n  dataIndex: 'winner',\n  key: 'winner',\n  sorter: (a, b) => a.winner - b.winner\n}, {\n  title: 'Looser',\n  dataIndex: 'looser',\n  key: 'loser',\n  sorter: (a, b) => a.looser - b.looser\n}, {\n  title: 'Score',\n  dataIndex: 'score',\n  key: 'score'\n}];\n\nclass GrandSlams extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      matchesResults: [],\n      matchesPageNumber: 1,\n      matchesPageSize: 10,\n      playersResults: [],\n      pagination: null\n    };\n    this.leagueOnChange = this.leagueOnChange.bind(this);\n    this.goToMatch = this.goToMatch.bind(this);\n  }\n\n  goToMatch(matchId) {\n    window.location = `/matches?id=${matchId}`;\n  }\n\n  leagueOnChange(value) {\n    // TASK 2: this value should be used as a parameter to call getAllMatches in fetcher.js with the parameters page and pageSize set to null\n    // then, matchesResults in state should be set to the results returned - see a similar function call in componentDidMount()\n    getAllMatches(null, null, value).then(res => {\n      this.setState({\n        matchesResults: res.results\n      });\n    });\n  }\n\n  componentDidMount() {\n    getAllMatches(null, null, 'D1').then(res => {\n      this.setState({\n        matchesResults: res.results\n      });\n    });\n    getAllPlayers().then(res => {\n      console.log(res.results); // TASK 1: set the correct state attribute to res.results\n\n      console.log(\"Ã¤sdsad\");\n      console.log(res.results);\n      this.setState({\n        playersResults: res.results\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundImage: `url(${background})`,\n        backgroundPosition: 'center',\n        backgroundSize: 'cover',\n        backgroundRepeat: 'no-repeat'\n      },\n      children: [/*#__PURE__*/_jsxDEV(MenuBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '70vw',\n          margin: '0 auto',\n          marginTop: '2vh'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Grand Slams\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          defaultValue: \"Wimbeldon\",\n          style: {\n            width: 120\n          },\n          onChange: this.leagueOnChange,\n          children: [/*#__PURE__*/_jsxDEV(Option, {\n            value: \"WI\",\n            children: \"Wimbeldon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Option, {\n            value: \"UO\",\n            children: \"US Open\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(Option, {\n            value: \"AO\",\n            children: \"Australian Open\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(Option, {\n            value: \"AO\",\n            children: \"French Open\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 14\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          dataSource: this.state.matchesResults,\n          columns: matchColumns,\n          pagination: {\n            pageSizeOptions: [5, 10],\n            defaultPageSize: 5,\n            showQuickJumper: true\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '80vw',\n          margin: '0 auto',\n          marginTop: '5vh'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Champions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          dataSource: this.state.playersResults,\n          columns: playerColumns,\n          pagination: {\n            pageSizeOptions: [5, 5],\n            defaultPageSize: 5,\n            showQuickJumper: true\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default GrandSlams;","map":{"version":3,"sources":["/Users/martinprieto/Documents/Uni/CIS450-Project/WebApp/client/src/pages/GrandSlams.js"],"names":["React","Table","Pagination","Select","MenuBar","getAllMatches","getAllPlayers","background","Column","ColumnGroup","Option","playerColumns","title","dataIndex","key","sorter","a","b","firstName","localeCompare","render","text","row","PlayerId","lastName","Nationality","dateOfBirth","matchColumns","date","winner","looser","GrandSlams","Component","constructor","props","state","matchesResults","matchesPageNumber","matchesPageSize","playersResults","pagination","leagueOnChange","bind","goToMatch","matchId","window","location","value","then","res","setState","results","componentDidMount","console","log","backgroundImage","backgroundPosition","backgroundSize","backgroundRepeat","width","margin","marginTop","pageSizeOptions","defaultPageSize","showQuickJumper"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  Table,\n  Pagination,\n  Select\n} from 'antd'\n\nimport MenuBar from '../components/MenuBar';\nimport { getAllMatches, getAllPlayers } from '../fetcher'\nimport background from \"../Images/red2.png\";\nconst { Column, ColumnGroup } = Table;\nconst { Option } = Select;\n\n\nconst playerColumns = [\n  {\n    title: 'First Name',\n    dataIndex: 'firstName',\n    key: 'firstName',\n    sorter: (a, b) => a.firstName.localeCompare(b.firstName),\n    render: (text, row) => <a href={`/players?id=${row.PlayerId}`}>{text}</a>\n  },\n  {\n    title: 'Last Name',\n    dataIndex: 'lastName',\n    key: 'lastName',\n    sorter: (a, b) => a.lastName.localeCompare(b.lastName),\n  },\n  {\n    title: 'Nationality',\n    dataIndex: 'Nationality',\n    key: 'Nationality',\n    sorter: (a, b) => a.Nationality.localeCompare(b.Nationality)\n  },\n  {\n    title: 'Date of Birth',\n    dataIndex: 'dateOfBirth',\n    key: 'dateOfBirth',\n    sorter: (a, b) => a.dateOfBirth - b.dateOfBirth\n    \n  },\n  // TASK 7: add a column for Potential, with the ability to (numerically) sort ,\n  {\n    title: 'Hand',\n    dataIndex: 'hand',\n    key: 'hand',    \n  },\n];\n\nconst matchColumns = [\n  {\n    title: 'Tourney',\n    dataIndex: 'tourney',\n    key: 'tourney',\n    sorter: (a, b) => a.firstName.localeCompare(b.firstName),\n    render: (text, row) => <a href={`/players?id=${row.PlayerId}`}>{text}</a>\n  },\n  {\n    title: 'Date',\n    dataIndex: 'date',\n    key: 'date',\n    sorter: (a, b) => a.date - b.date,\n  },\n  {\n    title: 'Surface',\n    dataIndex: 'surface',\n    key: 'surface',\n  },\n  {\n    title: 'Winner',\n    dataIndex: 'winner',\n    key: 'winner',\n    sorter: (a, b) => a.winner - b.winner\n    \n  },\n  {\n    title: 'Looser',\n    dataIndex: 'looser',\n    key: 'loser',   \n    sorter: (a, b) => a.looser - b.looser \n  },\n  {\n    title: 'Score',\n    dataIndex: 'score',\n    key: 'score',    \n  },\n\n];\n\nclass GrandSlams extends React.Component {\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      matchesResults: [],\n      matchesPageNumber: 1,\n      matchesPageSize: 10,\n      playersResults: [],\n      pagination: null  \n    }\n\n    this.leagueOnChange = this.leagueOnChange.bind(this)\n    this.goToMatch = this.goToMatch.bind(this)\n  }\n\n\n  goToMatch(matchId) {\n    window.location = `/matches?id=${matchId}`\n  }\n\n  leagueOnChange(value) {\n    // TASK 2: this value should be used as a parameter to call getAllMatches in fetcher.js with the parameters page and pageSize set to null\n    // then, matchesResults in state should be set to the results returned - see a similar function call in componentDidMount()\n    getAllMatches(null, null, value).then(res => {\n      this.setState({ matchesResults: res.results })\n    })\n  }\n\n  componentDidMount() {\n    getAllMatches(null, null, 'D1').then(res => {\n      this.setState({ matchesResults: res.results })\n    })\n\n    getAllPlayers().then(res => {\n      console.log(res.results)\n      // TASK 1: set the correct state attribute to res.results\n      console.log(\"Ã¤sdsad\")\n      console.log(res.results)\n      this.setState({ playersResults: res.results })\n    })\n\n \n  }\n\n\n  render() {\n\n    return (\n      <div style={{ backgroundImage: `url(${background})`, backgroundPosition: 'center', backgroundSize: 'cover', backgroundRepeat: 'no-repeat'}}>\n        <MenuBar />\n        <div style={{ width: '70vw', margin: '0 auto', marginTop: '2vh' }}>\n          <h3>Grand Slams</h3>\n          <Select defaultValue=\"Wimbeldon\" style={{ width: 120 }} onChange={this.leagueOnChange}>\n            <Option value=\"WI\">Wimbeldon</Option>\n             {/* TASK 3: Take a look at Dataset Information.md from MS1 and add other options to the selector here  */}\n             <Option value=\"UO\">US Open</Option>\n             <Option value=\"AO\">Australian Open</Option>\n             <Option value=\"AO\">French Open</Option>\n          </Select>\n              <Table dataSource={this.state.matchesResults} columns={matchColumns} pagination={{ pageSizeOptions:[5, 10], defaultPageSize: 5, showQuickJumper:true }}/>\n        </div>\n        <div style={{ width: '80vw', margin: '0 auto', marginTop: '5vh' }}>\n          <h3>Champions</h3>\n          <Table dataSource={this.state.playersResults} columns={playerColumns} pagination={{ pageSizeOptions:[5, 5], defaultPageSize: 5, showQuickJumper:true }}/>\n        </div>\n      </div>\n    )\n  }\n\n}\n\nexport default GrandSlams\n\n"]},"metadata":{},"sourceType":"module"}